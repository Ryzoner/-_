@page "/MeasuresAdd"
@using SKIV.Components.Models
@using SKIV.Components.Service
@inject MeasureService MeasureService;

@rendermode InteractiveServer

<form>
    <div class="form-group">
        <label>Название события:</label>
        <input type="text" class="form-control" @bind="_measureName"/>
    </div>
    <div class="form-group">
        <label>Организатор:</label>
        <input type="text" class="form-control" @bind="_organizer"/>
    </div>
    <div class="form-group">
        <label>Дата начала:</label>
        <input type="date" class="form-control" @bind="_startDate"/>
    </div>
    <div class="form-group">
        <label>Дата окончания:</label>
        <input type="date" class="form-control" @bind="_endDate"/>
    </div>
    <div class="form-group">
        <label>Время начала:</label>
        <input type="time" class="form-control" @bind="_startTime"/>
    </div>
    <div class="form-group">
        <label>Время конца:</label>
        <input type="time" class="form-control" @bind="_endTime"/>
    </div>
    <div class="form-group">
        <label>Место:</label>
        <input type="text" class="form-control" @bind="_place"/>
    </div>
    <div class="form-group">
        <label>Адрес:</label>
        <input type="text" class="form-control" @bind="_address"/>
    </div>
    <div class="form-group">
        <label>Всего участников:</label>
        <input type="number" class="form-control" @bind="_totalParticipants"/>
    </div>
    <div class="form-group">
        <label>Имя контактного лица:</label>
        <input type="text" class="form-control" @bind="_contactFullName"/>
    </div>
    <div class="form-group">
        <label>Телефон контактного лица:</label>
        <input type="tel" class="form-control" @bind="_contactPhoneNumber"/>
    </div>
    <div class="form-group">
        <label>Email контактного лица:</label>
        <input type="email" class="form-control" @bind="_contactEmail"/>
    </div>
    <div class="form-group">
        <label>Всего волонтеров:</label>
        <input type="number" class="form-control" @bind="_totalVolunteers"/>
    </div>
    <div class="form-group">
        <label>Волонтеры с ограничениями:</label>
        <input type="number" class="form-control" @bind="_volunteersWithDisabilities"/>
    </div>
    <div class="form-group">
        <label>Добро.ру (ссылка на сайт):</label>
        <input type="url" class="form-control" @bind="_dobroRu"/>
    </div>
    <div class="form-group">
        <label>ЛП:</label>
        <input type="checkbox" class="form-check-input" @bind="_lp"/>
    </div>
    <div class="form-group">
        <label>ЛР:</label>
        <input type="checkbox" class="form-check-input" @bind="_lr"/>
    </div>
    <!--
    <div class="form-group">
        <label>Волонтёры:</label>
        @foreach (var volunteer in Volunteers)
        {
            <div class="form-check">
                <input class="form-check-input" type="checkbox" @bind="_selectedVolunteers[@volunteer.Id]" />
                <label class="form-check-label">@volunteer.Name</label>
                <input type="number" min="1" max="5" class="form-control" @bind="_volunteerRatings[@volunteer.Id]" />
            </div>
        }
    </div>
    -->
        </form>

<button class="btn btn-primary" @onclick="Add">Добавить</button>

@code {
    
    private Dictionary<int, bool> _selectedVolunteers = new Dictionary<int, bool>();
    private Dictionary<int, int> _volunteerRatings = new Dictionary<int, int>();
    private string? _measureName;
    private string? _organizer;
    private DateTime _startDate;
    private DateTime _endDate;
    private DateTime _startTime;
    private DateTime _endTime;
    private string? _place;
    private string? _address;
    private int _totalParticipants;
    private string? _contactFullName;
    private int? _contactPhoneNumber;
    private string? _contactEmail;
    private int _totalVolunteers;
    private int _volunteersWithDisabilities;
    private string? _dobroRu;
    private bool _lp;
    private bool _lr;
/*
    private void AddMeasure()
    {
        var measure = new Measure()
        {
            MeasureName = _measureName,
            Organizer = _organizer,
            StartDate = _startDate,
            EndDate = _endDate,
            StartTime = _startTime,
            EndTime = _endTime,
            Place = _place,
            Address = _address,
            TotalParticipants = _totalParticipants,
            ContactFullName = _contactFullName,
            ContactPhoneNumber = _contactPhoneNumber,
            ContactEmail = _contactEmail,
            TotalVolunteers = _totalVolunteers,
            VolunteersWithDisabilities = _volunteersWithDisabilities,
            DobroRu = _dobroRu,
            LP = _lp,
            LR = _lr
        };

        foreach (var volunteerId in _selectedVolunteers.Keys)
        {
            if (_selectedVolunteers[volunteerId])
            {
                var rating = _volunteerRatings.GetValueOrDefault(volunteerId, 0);
                measure.VolunteerRatings.Add(new VolunteerRating)
                {
                    VolunteerId = volunteerId,
                    Score = rating
                });
            }
        }
        MeasureService.AddMeasure(measure);
    }
    */
        
private void Add()
    {
        var measure = new Measure()
        {
            MeasureName = "Название мероприятия",
            Organizer = "Организатор",
            StartDate = "24.08.2022", // Пример даты начала мероприятия
            EndDate = "25.08.2022", // Пример: мероприятие еще не завершено
            StartTime = "11:45", // Пример времени начала мероприятия
            EndTime = "13:00", // Пример: мероприятие завершено
            Place = "Место проведения",
            Address = "Адрес",
            TotalParticipants = 100, // Пример: ожидаемое количество участников
            ParticipantsWithDosabilities = 10, // Пример: количество участников с ограничениями
            ContactFullName = "Контактное лицо",
            ContactPhoneNumber = 123456789, // Пример: номер телефона
            ContactEmail = "example@example.com",
            TotalVolunteers = 50, // Пример: ожидаемое количество волонтеров
            VolunteersWithDisabilities = 5, // Пример: количество волонтеров с ограничениями
            DobroRu = "https://example.com", // Пример ссылки на Dobro.ru
            LP = true, // Пример: наличие ЛП
            LR = false, // Пример: отсутствие ЛР
            ThankYouLettersSent = true
        };
        MeasureService.AddMeasure(measure);
    }

}